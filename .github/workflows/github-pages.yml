name: Build and deploy Jekyll site to GitHub Pages

on:
  push:
    branches:
      - source

  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          path: source

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - uses: actions/setup-node@v4
        with:
          node-version: '16.4.x'

      - uses: typst-community/setup-typst@v3
        id: setup-typst
        with:
          typst-version: 'v0.10.0'

      - uses: actions/cache@v3
        with:
          path: source/vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}

      - uses: actions/cache@v3
        with:
          path: source/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/yarn.lock') }}

      - name: Bundle install
        working-directory: source
        run: |
          gem install bundler --no-document
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Yarn install
        working-directory: source
        run: |
          yarn install

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Build resume PDF with Typst
        working-directory: source
        run: typst compile --root=./ --font-path=assets/fonts/ resume/_resume2023.typ resume.pdf

      - name: Jekyll Build
        working-directory: source
        env:
          JEKYLL_ENV: production
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
